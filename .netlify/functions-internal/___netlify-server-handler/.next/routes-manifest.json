{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/actualizar-rol",
      "regex": "^/actualizar\\-rol(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/actualizar\\-rol(?:/)?$"
    },
    {
      "page": "/admin/check",
      "regex": "^/admin/check(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/check(?:/)?$"
    },
    {
      "page": "/admin/create-admin",
      "regex": "^/admin/create\\-admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/create\\-admin(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/fix-policies",
      "regex": "^/admin/fix\\-policies(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/fix\\-policies(?:/)?$"
    },
    {
      "page": "/admin/rsvp-structure",
      "regex": "^/admin/rsvp\\-structure(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/rsvp\\-structure(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/admin/usuarios-asistentes",
      "regex": "^/admin/usuarios\\-asistentes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/usuarios\\-asistentes(?:/)?$"
    },
    {
      "page": "/auth-check",
      "regex": "^/auth\\-check(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth\\-check(?:/)?$"
    },
    {
      "page": "/check-user",
      "regex": "^/check\\-user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/check\\-user(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/debug",
      "regex": "^/debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug(?:/)?$"
    },
    {
      "page": "/fix-admin",
      "regex": "^/fix\\-admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-admin(?:/)?$"
    },
    {
      "page": "/fix-admin-direct",
      "regex": "^/fix\\-admin\\-direct(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-admin\\-direct(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/menu",
      "regex": "^/menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/menu(?:/)?$"
    },
    {
      "page": "/quick-fix",
      "regex": "^/quick\\-fix(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/quick\\-fix(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/role-debug",
      "regex": "^/role\\-debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/role\\-debug(?:/)?$"
    },
    {
      "page": "/rsvp",
      "regex": "^/rsvp(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rsvp(?:/)?$"
    },
    {
      "page": "/rsvp-debug",
      "regex": "^/rsvp\\-debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rsvp\\-debug(?:/)?$"
    },
    {
      "page": "/rsvp-structure",
      "regex": "^/rsvp\\-structure(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rsvp\\-structure(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}